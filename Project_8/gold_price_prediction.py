# -*- coding: utf-8 -*-
"""Gold_Price_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16TaNf-EhE_kQmmRgwmlR-h1b-7C8zhOT
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from sklearn.ensemble import RandomForestRegressor

df=pd.read_csv('/content/gld_price_data.csv')

df.head()

df.tail()

df.shape

df.info()

df.isnull().sum()

df.describe()

correlation = df.select_dtypes(include=np.number).corr()

sns.heatmap(correlation,cmap='Blues',cbar=True,square=True,fmt='.2f',annot=True,annot_kws={'size':8})

sns.displot(df['GLD'],color='green')

X=df.drop(['GLD','Date'],axis=1)
Y=df['GLD']

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,random_state=2)

model=RandomForestRegressor(n_estimators=100)

model.fit(X_train,Y_train)

Y_train_pred=model.predict(X_train)

print("r_2 score",r2_score(Y_train,Y_train_pred))

plt.scatter(Y_train,Y_train_pred)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual Prices vs Predicted Prices")

Y_test_pred=model.predict(X_test)

print("r_2 score",r2_score(Y_test,Y_test_pred))

plt.scatter(Y_test,Y_test_pred)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual Prices vs Predicted Prices")

