# -*- coding: utf-8 -*-
"""Car_Price_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EOxA4lXAd7dHwf3rgvCtduuGstV-7-de
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,r2_score
from sklearn.linear_model import Lasso
from sklearn.linear_model import LinearRegression

df=pd.read_csv("/content/car data.csv")

df.head()

df.shape

df.describe()

df.isnull().sum()

df.info()

print(df['Car_Name'].value_counts())
print(df['Fuel_Type'].value_counts())
print(df['Seller_Type'].value_counts())
print(df['Transmission'].value_counts())

df.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)
df.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)
df.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)

df.head()

X=df.drop(['Car_Name','Selling_Price'],axis=1)
print(X)

Y=df['Selling_Price']
print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,random_state=2)

lgr_model=LinearRegression()

lgr_model.fit(X_train,Y_train)

Y_train_pred=lgr_model.predict(X_train)

plt.scatter(Y_train,Y_train_pred)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs Predicted Price')
plt.show()

print('training data r2_score',r2_score(Y_train,Y_train_pred))

Y_test_pred=lgr_model.predict(X_test)

plt.scatter(Y_test,Y_test_pred)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs Predicted Price')
plt.show()

print('testing data r2_score',r2_score(Y_test,Y_test_pred))

"""Lasso"""

lass_model=Lasso()

lass_model.fit(X_train,Y_train)

Y_train_pred=lass_model.predict(X_train)

plt.scatter(Y_train,Y_train_pred)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs Predicted Price')
plt.show()

print('training data r2_score',r2_score(Y_train,Y_train_pred))

Y_test_pred=lass_model.predict(X_test)

plt.scatter(Y_test,Y_test_pred)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs Predicted Price')
plt.show()

print('testing data r2_score',r2_score(Y_test,Y_test_pred))

