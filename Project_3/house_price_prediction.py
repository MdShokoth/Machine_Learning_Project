# -*- coding: utf-8 -*-
"""House_Price_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AOcqtBuHFnmyYc7-X7Ikxf-9CkChPlc2
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import accuracy_score,r2_score,mean_squared_error
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor

from sklearn import datasets
data = datasets.fetch_california_housing(as_frame=True)
X=data.data
Y=data.target
df=pd.DataFrame(X,columns=data.feature_names)
df['price']=Y

"""Another way to convert dataset to pandas dataframe"""

#from sklearn import datasets
#data = datasets.fetch_california_housing()
#df=pd.DataFrame(data.data,columns=data.feature_names)
#df['price']=data.target

df.head(10)

df.isnull().sum()

correlation=df.corr()

plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model=XGBRegressor()

model.fit(X_train,Y_train)

Y_train_Prediction=model.predict(X_train)

plt.plot(Y_train,Y_train_Prediction)
plt.xlabel('Actual Value')
plt.ylabel('Predicted Value')
plt.title('Actual vs Predicted')
plt.show()

Y_test_Prediction=model.predict(X_test)

plt.plot(Y_test,Y_test_Prediction)
plt.xlabel('Actual Value')
plt.ylabel('Predicted Value')
plt.title('Actual vs Predicted')
plt.show()

score_1=r2_score(Y_train,Y_train_Prediction)
print(score_1)
score_2=mean_squared_error(Y_train,Y_train_Prediction)
print(score_2)

score_1=r2_score(Y_test,Y_test_Prediction)
print(score_1)
score_2=mean_squared_error(Y_test,Y_test_Prediction)
print(score_2)

sample_data=[3.1200,	52.0,	4.797527,	1.061824,	1157.0,	1.788253,	37.84,	-122.25	]

sample_data=np.asarray(sample_data).reshape(1,-1)

predit_price=model.predict(sample_data)
print(predit_price)

