# -*- coding: utf-8 -*-
"""Heart_Disease_Predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1whWjEkXlST4UzugG6_-FvnWUQk4U4s2k
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,r2_score

df=pd.read_csv('/content/heart_disease_data.csv')

df.head()

df.tail()

df.shape

df.info()

df.isnull().sum()

df.describe()

X=df.drop(columns='target',axis=1)
Y=df['target']

print(X)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

model=LogisticRegression()

model.fit(X_train,Y_train)

Y_train_Predict=model.predict(X_train)

print("accuracy score",accuracy_score(Y_train_Predict,Y_train))
print("r2_score",r2_score(Y_train_Predict,Y_train))

plt.figure(figsize=(10,10))
sns.heatmap(df.corr(),annot=True)

print(Y_train_Predict)



Y_test_Predict=model.predict(X_test)

print("accuracy score",accuracy_score(Y_test_Predict,Y_test))
print("r2_score",r2_score(Y_test_Predict,Y_test))

sample_data=(52,1,2,172,199,1,1,162,0,0.5,2,0,3)

sample_data=np.asarray(sample_data).reshape(1,-1)

prediction=model.predict(sample_data)

if(prediction[0]==0):
  print("person does not have heart disease")
else:
  print("person has heart disease")

