# -*- coding: utf-8 -*-
"""Loan_Status_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sao5QXu16yBTSyawpjby4Umey-v7ql0h
"""

import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

df=pd.read_csv('/content/train_u6lujuX_CVtuZ9i (1).csv')

df.head()

df.shape

df.describe()

df.isnull().sum()

df=df.dropna()
df.isnull().sum()

df.head(10)

df.replace({"Gender":{'Male':0,'Female':1},"Married":{'No':0,'Yes':1},"Self_Employed":{'No':0,'Yes':1},"Education":{'Not Graduate':0,'Graduate':1},"Property_Area":{'Urban':0,'Semiurban':1,'Rural':2}},inplace=True)

df.head(10)

df["Dependents"].value_counts()

df=df.replace(to_replace='3+',value=4)

df["Dependents"].value_counts()

sns.countplot(x='Education',hue='Loan_Status',data=df)

sns.countplot(x='Married',hue='Loan_Status',data=df)

X=df.drop(columns=['Loan_ID','Loan_Status'])
Y=df['Loan_Status']

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

classifier=SVC(kernel='linear')

classifier.fit(X_train,Y_train)

predict_Y_train=classifier.predict(X_train)
print("Accuracy score of training data",accuracy_score(Y_train,predict_Y_train))

predict_Y_test=classifier.predict(X_test)
print("Accuracy score of testing data",accuracy_score(Y_test,predict_Y_test))

print(Y_test)

sample_data=[0,	1,	2,	0,	0,	4006,	1526.0,	168.0,	360.0,	1.0,	0	]

prediction=classifier.predict([sample_data])

if prediction[0]==0:
  print("Loan will not be approved")
else:
  print("Loan will be approved")

